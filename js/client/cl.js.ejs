define('client/cl',
['underscore', 'glmatrix', 'ByteBuffer', 'common/com', 'clipmap/cm', 'cgame/cg', 'renderer/re', 'shared/cmd', 'shared/cvar'],
function (_, glmatrix, ByteBuffer, com, cm, cg, re, cmd, cvar) {
	<%- include ../shared/shared.js %>
	<%- include ../common/com-defines.js %>
	<%- include ../cgame/cg-defines.js %>
	<%- include cl-defines.js %>
	<%- include cl-main.js %>
	<%- include cl-cgame.js %>
	<%- include cl-cmd.js %>
	<%- include cl-input.js %>
	<%- include cl-servercmds.js %>

	var protectedExports = {
		GetGameState: function () { return cl.gameState; },
		GetCurrentUserCommandNumber: GetCurrentUserCommandNumber,
		GetUserCommand: GetUserCommand,
		GetCurrentSnapshotNumber: GetCurrentSnapshotNumber,
		GetSnapshot: GetSnapshot,
		LoadClipMap: cm.LoadMap,
		LoadRenderMap: re.LoadMap,
		Trace: cm.Trace,
		CreateElement: re.CreateElement,
		DeleteElement: re.DeleteElement,
		DrawText: re.DrawText,
		RenderScene: re.RenderScene
	};

	var publicExports = {
		Init: Init,
		InitCGame: InitCGame,
		ShutdownCGame: ShutdownCGame,
		InitRenderer: InitRenderer,
		ShutdownRenderer: ShutdownRenderer,
		Frame: Frame,
		PacketEvent: PacketEvent,
		KeyDownEvent: KeyDownEvent,
		KeyUpEvent: KeyUpEvent,
		MouseMoveEvent: MouseMoveEvent,
		MapLoading: MapLoading
	};

	return publicExports;
});