import os, fnmatch

Import('env')
Import('subdirs')
Import('rglob')

ASSET_DIR = os.path.abspath('../assets')

##
# Custom builders
##
ConvToOGG = Builder(
	action = 'oggenc $SOURCE -o $TARGET')

ConvToPNG = Builder(
	action = 'convert $SOURCE $TARGET')

ConvToDXT = Builder(
	action = 'crunch -file $SOURCE -rescalemode nearest -fileformat dds -out $TARGET')

env.Append(BUILDERS = {
	'ConvToOGG': ConvToOGG,
	'ConvToPNG': ConvToPNG,
	'ConvToDXT': ConvToDXT
})

##
# Targets
##
def findAssets(root, dirs, exts):
	files = []

	for dir in dirs:
		absolute_dir = root + '/' + dir

		for ext in exts:
			files.extend(rglob(absolute_dir, '*' + ext))

	return files

def addAudio(commands, src_dir, out_dir):
	files = findAssets(src_dir, ['music', 'sound'], ['.wav'])

	for file in files:
		out = file.abspath.replace(src_dir, out_dir).replace('.wav', '.ogg')
		commands.append(env.ConvToOGG(out, file.abspath))

def addImages(commands, src_dir, out_dir):
	exts = ['.jpg', '.png', '.tga']
	files = findAssets(src_dir, ['gfx/2d', 'icons', 'levelshots', 'menu/medals', 'ui'], exts)

	for file in files:
		out = file.abspath.replace(src_dir, out_dir)
		for ext in exts:
			out = out.replace(ext, '.png')

		commands.append(env.ConvToPNG(out, file.abspath))

def addMaps(commands, src_dir, out_dir):
	files = findAssets(src_dir, ['maps'], ['.bsp'])

	for file in files:
		out = file.abspath.replace(src_dir, out_dir)
		commands.append(Command(out, file.abspath, Copy('$TARGET', '$SOURCE')))

def addModels(commands, src_dir, out_dir):
	files = findAssets(src_dir, ['models'], ['.cfg', '.md3', '.skin'])

	for file in files:
		out = file.abspath.replace(src_dir, out_dir)
		commands.append(Command(out, file.abspath, Copy('$TARGET', '$SOURCE')))

def addShaders(commands, src_dir, out_dir):
	files = findAssets(src_dir, ['scripts'], ['.shader'])

	for file in files:
		out = file.abspath.replace(src_dir, out_dir)
		commands.append(Command(out, file.abspath, Copy('$TARGET', '$SOURCE')))

def addTextures(commands, src_dir, out_dir):
	exts = ['.jpg', '.tga']
	files = findAssets(src_dir, ['env', 'gfx/colors', 'gfx/damage', 'gfx/misc', 'menu/medals', 'models', 'sprites', 'textures'], exts)

	for file in files:
		out = file.abspath.replace(src_dir, out_dir)
		for ext in exts:
			out = out.replace(ext, '.dds')

		commands.append(env.ConvToDXT(out, file.abspath))

##
# Add all of the assets from each sub dir of /assets.
##
audio = []
images = []
maps = []
models = []
shaders = []
textures = []

for dir in subdirs(ASSET_DIR):
	src_dir = ASSET_DIR + '/' + dir + '/src'
	out_dir = ASSET_DIR + '/' + dir + '/built'
	addAudio(audio, src_dir, out_dir)
	addImages(images, src_dir, out_dir)
	addMaps(maps, src_dir, out_dir)
	addModels(models, src_dir, out_dir)
	addShaders(shaders, src_dir, out_dir)
	addTextures(textures, src_dir, out_dir)

env.Alias('assets', [audio, images, maps, models, shaders, textures])